import{_ as s,c as i,o as a,a1 as e}from"./chunks/framework.DCKU21so.js";const n="/assets/image-20240519121201584.ir_LRDGC.png",t="/assets/image-20240519122021319.87RTEIbE.png",l="/assets/image-20240519122120702.BEZJqsen.png",_=JSON.parse('{"title":"model中的抽象类","description":"","frontmatter":{},"headers":[],"relativePath":"django/modelClass.md","filePath":"django/modelClass.md"}'),p={name:"django/modelClass.md"},h=e(`<h1 id="model中的抽象类" tabindex="-1">model中的抽象类 <a class="header-anchor" href="#model中的抽象类" aria-label="Permalink to &quot;model中的抽象类&quot;">​</a></h1><p>当我们在app中<code>models.py</code>文件中定义model表并执行<code>python manage.py makemigrations</code>和<code>python manage.py migrate</code>后，Django就会在数据库中创建表</p><p>但是我们也可以对其默认配置修改，定义model类但是不在数据库中创建</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> django.db </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> models</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">models</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> models.CharField(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">verbose_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;标题&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">max_length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        abstract </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span></span></code></pre></div><p><img src="`+n+'" alt="image-20240519121201584"></p><p><code>abstract = True</code>是一个标识，标识当前类只用于为其他类提供公共的字段（继承关系），并不会单独创建一张表</p><p><img src="'+t+'" alt="image-20240519122021319"></p><p>在<code>Mine</code>这张表中，除了有自己定义的<code>size</code>字段，还有继承过来的<code>title</code>字段</p><p><img src="'+l+'" alt="image-20240519122120702"></p>',9),k=[h];function d(o,r,c,g,E,m){return a(),i("div",null,k)}const F=s(p,[["render",d]]);export{_ as __pageData,F as default};
