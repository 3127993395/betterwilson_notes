import{_ as s,c as i,o as a,a1 as n}from"./chunks/framework.DCKU21so.js";const l="/assets/image-20240216225748743.7qk0IVbJ.png",y=JSON.parse('{"title":"虚拟环境下安装uwsgi","description":"","frontmatter":{},"headers":[],"relativePath":"linux/ResolveError.md","filePath":"linux/ResolveError.md"}'),t={name:"linux/ResolveError.md"},h=n('<h1 id="虚拟环境下安装uwsgi" tabindex="-1">虚拟环境下安装uwsgi <a class="header-anchor" href="#虚拟环境下安装uwsgi" aria-label="Permalink to &quot;虚拟环境下安装uwsgi&quot;">​</a></h1><h4 id="error-could-not-build-wheels-for-uwsgi-which-is-required-to-install-pyproject-toml-based-projects" tabindex="-1">ERROR: Could not build wheels for uwsgi, which is required to install pyproject.toml-based projects <a class="header-anchor" href="#error-could-not-build-wheels-for-uwsgi-which-is-required-to-install-pyproject-toml-based-projects" aria-label="Permalink to &quot;ERROR: Could not build wheels for uwsgi, which is required to install pyproject.toml-based projects&quot;">​</a></h4><p><img src="'+l+`" alt="image-20240216225748743"></p><p><strong>更新并安装 yum 软件包</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssl-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bzip2-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libffi-devel</span></span></code></pre></div><p><strong>下载最新的OpenSSL源码，解压并编译</strong></p><p>我选择了<code>/usr/src</code>目录来对源代码进行操作。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/src</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://www.openssl.org/source/openssl-3.0.13.tar.gz</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-check-certificate</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xzvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssl-3.0.13.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssl-3.0.13</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix=/usr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --openssldir=/etc/ssl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --libdir=lib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no-shared</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zlib-dynamic</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">检查是否安装了</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OpenSSL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@iZgc7d0d1szot7fke40ez9Z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# openssl version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">OpenSSL</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.0.13</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Jan</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Library: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">OpenSSL</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.0.13</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Jan</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@iZgc7d0d1szot7fke40ez9Z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# which openssl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/usr/bin/openssl</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 移除openssl-devel</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remove</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openssl-devel2.0.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重新编译python</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/Python-3.11.0/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./configure</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --enable-optimizations</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --with-openssl=/usr</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> altinstall</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">检查Python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3.11是否已安装</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@iZgc7d0d1szot7fke40ez9Z Python-3.11.0]# python3.11 -V</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Python</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.11.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@iZgc7d0d1szot7fke40ez9Z Python-3.11.0]# pip3 -V</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 22.3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/python311/lib/python3.11/site-packages/pip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (python </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /od/backend/venv/bin/activate</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uwsgi==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0.23</span></span></code></pre></div><h1 id="ssl证书配置时nginx提示缺少ngx-http-ssl-module模块" tabindex="-1">ssl证书配置时nginx提示缺少<code>ngx_http_ssl_module</code>模块 <a class="header-anchor" href="#ssl证书配置时nginx提示缺少ngx-http-ssl-module模块" aria-label="Permalink to &quot;ssl证书配置时nginx提示缺少\`ngx_http_ssl_module\`模块&quot;">​</a></h1><h3 id="nginx-emerg-the-ssl-parameter-requires-ngx-http-ssl-module-in" tabindex="-1">nginx: [emerg] the &quot;ssl&quot; parameter requires ngx_http_ssl_module in... <a class="header-anchor" href="#nginx-emerg-the-ssl-parameter-requires-ngx-http-ssl-module-in" aria-label="Permalink to &quot;nginx: [emerg] the &quot;ssl&quot; parameter requires ngx_http_ssl_module in...&quot;">​</a></h3><p>重新编译nginx配置文件(nginx第一次下载时即可配置)</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /opt/nginx-1.24.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./configure</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix=/opt/my_nginx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --with-http_stub_status_module</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --with-http_ssl_module</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nproc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nproc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 覆盖原文件</span></span></code></pre></div>`,12),p=[h];function e(k,r,d,F,o,g){return a(),i("div",null,p)}const C=s(t,[["render",e]]);export{y as __pageData,C as default};
